name: 'Integration Test'

on:
  schedule:
    - cron:  '0 6 * * *'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: dev
    - uses: actions/github-script@v3
      id: create-branch
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const integrationBranchName = `integration-branch-${Date.now()}`
          core.setOutput('GITHUB_INTEGRATION_BRANCH', integrationBranchName);
          const reference = await github.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/dev',
            });
          console.log(reference);
          await github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/heads/${integrationBranchName}`,
            sha: reference.data.object.sha,
          })
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: '15.x'
    - run: npm ci
    - name: Badge Coverage
      id: jest-coverage
      uses: luk-schweizer/code-coverage-jest-action@dev
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        create-file-path: 'tests/integration/badge.svg'
        test-command: 'npx jest --coverage integration/dummy.test.js'
    - run: npm run integration-test
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_INTEGRATION_BRANCH: ${{ steps.create-branch.outputs.GITHUB_INTEGRATION_BRANCH }}
        BADGE_PATH: 'tests/integration/badge.svg'
        JOB_NAME: 'build'
    - uses: actions/github-script@v3
      if: ${{ always() }}
      id: delete-branch
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        github-integration-branch: ${{ steps.create-branch.outputs.GITHUB_INTEGRATION_BRANCH }}
        script: |
          await github.git.deleteRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `heads/${core.getInput('github-integration-branch')}`,
          })